apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdep
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: dockerhandson/spring-boot-mongo:1
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          requests:
            memory: 250Mi
            cpu: 256m
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mondodeployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
      - name: mongodbnfsvol
        nfs:
          server: 172.31.36.95
          path: /mnt/share
      containers:
      - name: mongocontainer
        image: mongo
        ports:
        - containerPort: 27017
        env:
         - name: MONGO_INITDB_ROOT_USERNAME
           value: devdb
         - name: MONGO_INITDB_ROOT_PASSWORD
           value: devdb@123
        volumeMounts:
        - name: mongodbnfsvol
          mountPath: /data/db
---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
